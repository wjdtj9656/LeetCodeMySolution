/**
 * @param {number[][]} matrix
 * @return {number[]}
 */
var spiralOrder = function(matrix) {
    const dx = [0,1,0,-1];
    const dy = [1,0,-1,0];
    const visit = new Set();
  let m = matrix.length;
  let n = matrix[0].length;
  let num = m*n;
  let x = 0;
  let y = 0;
  let nowDir = 0;
  const result = [];
  while(num > 0){
    if(visit.has(`${x+dx[nowDir]}-${y+dy[nowDir]}`)){
      visit.add(`${x}-${y}`);
      result.push(matrix[x][y]);
      num--;
      nowDir += 1;
      nowDir %= 4;
      x+= dx[nowDir];
      y+= dy[nowDir];
      continue;
    }
    visit.add(`${x}-${y}`);
    result.push(matrix[x][y]);
    if(y+dy[nowDir] == n && nowDir ==0) nowDir++;
    if(x+dx[nowDir] == m && nowDir ==1) nowDir++;
    if(y+dy[nowDir] == -1 && nowDir ==2) nowDir++;
    x += dx[nowDir];
    y += dy[nowDir];
    num--;
  }
  return result;
};